Welcome to Msc-generator!
10/Apr/2010, version 2.4.0

With Msc-generator you can generate signalling charts from a textual 
descriptions. This allows easy editing and overview and is a viable alternative 
to mouse-based tools, such as Visio or PowerPoint.

The language of msc-generator resembles a bit to the graphviz tool and is 
documented in detail in the accompanying pdf file and help.

Msc-generator works both as a command-line tool and as an OLE server application. 
A Linux port is also maintained for the the command-line tool.

What is new in v2.5
-------------------

Language changes:
-	Boxes now can be multi-segment by concatenating multiple boxes  without a ';' 
in between.
-	Changed the default style for boxes from 'emphasis' and 'emptyemphasis' to 
'box' and 'emptybox'. Old names are still recognized.
-	Pipes can also have multiple segments to show as traffic moves from one pipe 
to another.
-	Prefixing any element with the "parallel" keyword makes it parallel with the 
rest of the chart.
-	Expanded the syntax for color definition. Now you can use + and - after a 
color name to get a lighter or darker version of that color. Use a percentage 
after the sign, such as 'red+50' makes red 50% brighter. Any color +100% is 
white, and any color -100% is black. You can still append a comma and a 
transparency value: red+20,30. Transparency values shall be between 0..255.
-	You can now enter #-style comments also in the middle of a multi-line label. 
To this end the \# escape has been introduced to generate a real #.
-	You can revert to the original font and margin values in a string by using 
the \f() and \mu(), \md(), \ml(), \mr(), \mn(), \ms(), \ml() escapes.
-	Lots of improvements in grammar parsing and error reporting.

Windows interface improvements:
-	Added internal dockable editor with Color Syntax Highlighting. The editor 
also supports auto-ident for RETURN, TAB and BACKSPACE keys. Optionally it 
also relies on parsing to find the correct identation for multi-line labels. 
There is search/replace support and undo/redo.
-	Added Tracking mode. By clicking a chart element the text editor is moved 
there. By double clicking or pressing Ctrl+T such tracking becomes permanent. 
It makes it easy to navigate in a big chart and to quickly jump to the 
relevant part of the text. Also, in tracking mode, as you move around in the 
text the currently selected element is highlighted on the drawn chart.
-	Added clickable and dockable error window. If you click an error the cursor 
jumps there in the editor.
-	Full screen support. There is a new OLE verb to show an embedded chart in 
full screen right away.
-	Added drop support: now you can drop files or text to the view and they are 
opened.
-	It is now possible to move around in a big chart by dragging it with the 
mouse.

Installation on Windows
-----------------------

Just donwload and double-click Msc-generator.msi. If you want to compile on 
windows, you need Visual C++ 2008 SP1 and msys (to build cairo). All the library 
sources are included in the repo (ugly, I know). Access the svn repository on 
sourceforge for msc-generator (e.g., using TurtleSVN).

Compilation on Linux
--------------------

On Linux, I suggest to check out the mercurial repo. (hg clone http://msc-
generator.hg.sourceforge.net/hgroot/msc-generator/msc-generator) It uses gnu 
automake+autoconf, yacc, lex, cairolib (and texinfo for the documentation).

Contact the author by mail: teknos at gmail.com.

Changelog 2.4.0
-	No longer experimental
-	Same language syntax as 2.3.1
-	A lot of speed improvements
-	Customizable toolbars and menus and other MFC goodies (came for free)
-	Added windows installer
-	Added Print and Print preview
-	Added unlimited undo
-	Fixed in-place editing caveats, added 1:1 aspect ratio button
-	Fixed a few bugs in the language engine

Changelog 2.3.3 (experimental)
-	Based on 2.3.2
-	Fixed a few bugs

Changelog 2.3.2 (experimental)
- Based on 2.3.1
- Fixed a number of bugs
- Added handling of navigation keypresses to Windows

Changelog 2.3.1 (experimental)
-	Based on 2.3.0
-	Added zoom modes to Windows
-	Pedantic now only gives a warning, but does not ignore the arc
-	Changed syntax for vertical visual elements to fit existing language logic 
better.

Changelog 2.3.0 (experimental)
-	Based on a pre 2.2.11
-	Added "vertical" visual elements 

Changelog 2.2.11
-	Much improved error reporting
-	Pedantic now only gives a warning, but does not ignore the arc
-	Added "++" as a symbol for dashed arrows.
-	Removed the need to quote built-in style names
-	Added zoom modes to windows

Changelog 2.2.10
-	Added "dot" style to block arrows. This completes all the features in the 
documentation.

Changelog 2.2.9
-	Added flicker-free scolling and zooming
-	Added Zoom control on toolbar, zoom menu commands and shortcut keys
-	Added "Overview" zoom mode and "O" button on toolbar
-	Mouse wheel zooming now is centered around the current pointer position
-	Removed redundant menu items and buttons, made menu more consistent
-	Removed registry setting for designlib.signalling: it is now searched besides 
the executable
-	Removed registry settings for textpath & viewmode. User should not notice it.
-	fixed # comment bug
-	labels can be now entered in multiple lines
-	added string formatting escapes: \B \U \I \s(style) and the ability to do 
empty \c()
-	added GNU Affero License template to all source files

Changelog 2.2.8
-	You can shut down the text editor by pressing the "E" button again
-	Text editor is not simply terminated, but its content is offered to be saved 
first
-	bugfixes in \b\u\i handling: now you can turn these on and off in the same 
string
-	number and compress attributes now work well with as part of styles
-	bugfix in block arrows
-	updated documentation

